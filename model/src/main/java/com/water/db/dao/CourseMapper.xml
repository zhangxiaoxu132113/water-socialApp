<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.water.db.dao.CourseMapper">
    <resultMap id="BaseResultMap" type="com.water.db.model.Course">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="article_id" property="articleId" jdbcType="VARCHAR"/>
        <result column="course_subject_id" property="courseSubjectId" jdbcType="VARCHAR"/>
        <result column="partent_id" property="partentId" jdbcType="VARCHAR"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="sort" property="sort" jdbcType="TINYINT"/>
        <result column="update_time" property="updateTime" jdbcType="BIGINT"/>
        <result column="create_on" property="createOn" jdbcType="BIGINT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, article_id, course_subject_id, partent_id, title, sort, update_time, create_on
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.water.db.model.CourseCriteria">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from course
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from course
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from course
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.water.db.model.CourseCriteria">
        delete from course
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.water.db.model.Course">
        insert into course (id, article_id, course_subject_id,
        partent_id, title, sort,
        update_time, create_on)
        values (#{id,jdbcType=VARCHAR}, #{articleId,jdbcType=VARCHAR}, #{courseSubjectId,jdbcType=VARCHAR},
        #{partentId,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{sort,jdbcType=TINYINT},
        #{updateTime,jdbcType=BIGINT}, #{createOn,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" parameterType="com.water.db.model.Course">
        insert into course
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="articleId != null">
                article_id,
            </if>
            <if test="courseSubjectId != null">
                course_subject_id,
            </if>
            <if test="partentId != null">
                partent_id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createOn != null">
                create_on,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="articleId != null">
                #{articleId,jdbcType=VARCHAR},
            </if>
            <if test="courseSubjectId != null">
                #{courseSubjectId,jdbcType=VARCHAR},
            </if>
            <if test="partentId != null">
                #{partentId,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=TINYINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=BIGINT},
            </if>
            <if test="createOn != null">
                #{createOn,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.water.db.model.CourseCriteria" resultType="java.lang.Integer">
        select count(*) from course
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update course
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.articleId != null">
                article_id = #{record.articleId,jdbcType=VARCHAR},
            </if>
            <if test="record.courseSubjectId != null">
                course_subject_id = #{record.courseSubjectId,jdbcType=VARCHAR},
            </if>
            <if test="record.partentId != null">
                partent_id = #{record.partentId,jdbcType=VARCHAR},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.sort != null">
                sort = #{record.sort,jdbcType=TINYINT},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=BIGINT},
            </if>
            <if test="record.createOn != null">
                create_on = #{record.createOn,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update course
        set id = #{record.id,jdbcType=VARCHAR},
        article_id = #{record.articleId,jdbcType=VARCHAR},
        course_subject_id = #{record.courseSubjectId,jdbcType=VARCHAR},
        partent_id = #{record.partentId,jdbcType=VARCHAR},
        title = #{record.title,jdbcType=VARCHAR},
        sort = #{record.sort,jdbcType=TINYINT},
        update_time = #{record.updateTime,jdbcType=BIGINT},
        create_on = #{record.createOn,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.water.db.model.Course">
        update course
        <set>
            <if test="articleId != null">
                article_id = #{articleId,jdbcType=VARCHAR},
            </if>
            <if test="courseSubjectId != null">
                course_subject_id = #{courseSubjectId,jdbcType=VARCHAR},
            </if>
            <if test="partentId != null">
                partent_id = #{partentId,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=TINYINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=BIGINT},
            </if>
            <if test="createOn != null">
                create_on = #{createOn,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.water.db.model.Course">
        update course
        set article_id = #{articleId,jdbcType=VARCHAR},
        course_subject_id = #{courseSubjectId,jdbcType=VARCHAR},
        partent_id = #{partentId,jdbcType=VARCHAR},
        title = #{title,jdbcType=VARCHAR},
        sort = #{sort,jdbcType=TINYINT},
        update_time = #{updateTime,jdbcType=BIGINT},
        create_on = #{createOn,jdbcType=BIGINT}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <select resultMap="BaseResultMap" parameterType="com.water.db.model.CourseCriteria"
            id="selectByExampleWithRowbounds">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from course
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <insert id="insertBatch">
        insert into course (id, article_id, course_subject_id, partent_id, title, sort, update_time, create_on) values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id,jdbcType=VARCHAR}, #{item.articleId,jdbcType=VARCHAR}, #{item.courseSubjectId,jdbcType=VARCHAR},
            #{item.partentId,jdbcType=VARCHAR}, #{item.title,jdbcType=VARCHAR}, #{item.sort,jdbcType=TINYINT},
            #{item.updateTime,jdbcType=BIGINT}, #{item.createOn,jdbcType=BIGINT})
        </foreach>
    </insert>
</mapper>